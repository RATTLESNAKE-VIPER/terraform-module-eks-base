apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: portus
  name: portus
spec:
  selector:
    matchLabels:
      app: portus
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: portus
    spec:
      containers:
      - name: portus-web
        env:
        - name: PORTUS_DB_ADAPTER
          value: postgresql
        - name: PORTUS_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_HOST
              name: portus-config
        - name: PORTUS_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_USERNAME
              name: portus-config
        - name: PORTUS_DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_PASSWORD
              name: portus-config
        - name: PORTUS_DB_DATABASE
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_DATABASE
              name: portus-config
        - name: RAILS_RELATIVE_URL_ROOT
          value: /console/
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        - name: CCONFIG_PREFIX
          value: PORTUS
        - name: PORTUS_SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              key: PORTUS_SECRET_KEY_BASE
              name: portus-secrets
        - name: PORTUS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PORTUS_PASSWORD
              name: portus-secrets
        - name: PORTUS_KEY_PATH
          value: /secrets/portus.key
        image: opensuse/portus:${version}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /console/api/v1/_ping
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /console/api/v1/_ping
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /secrets
          name: secrets
          readOnly: true
        - mountPath: /srv/Portus/config/config-local.yml
          name: portus-config
          readOnly: true
          subPath: config-local.yml
      - name: portus-worker
        env:
        - name: PORTUS_DB_ADAPTER
          value: postgresql
        - name: PORTUS_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_HOST
              name: portus-config
        - name: PORTUS_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_USERNAME
              name: portus-config
        - name: PORTUS_DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_PASSWORD
              name: portus-config
        - name: PORTUS_DB_DATABASE
          valueFrom:
            configMapKeyRef:
              key: PORTUS_DB_DATABASE
              name: portus-config
        - name: PORTUS_BACKGROUND
          value: "true"
        - name: CCONFIG_PREFIX
          value: PORTUS
        - name: PORTUS_SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              key: PORTUS_SECRET_KEY_BASE
              name: portus-secrets
        - name: PORTUS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PORTUS_PASSWORD
              name: portus-secrets
        - name: PORTUS_KEY_PATH
          value: /secrets/portus.key
        image: opensuse/portus:${version}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /secrets
          name: secrets
          readOnly: true
        - mountPath: /srv/Portus/config/config-local.yml
          name: portus-config
          readOnly: true
          subPath: config-local.yml
      volumes:
      - name: secrets
        secret:
          defaultMode: 420
          items:
          - key: PORTUS_KEY
            path: portus.key
          secretName: portus-secrets
      - configMap:
          defaultMode: 420
          items:
          - key: config.yml
            path: config-local.yml
          name: portus-config
        name: portus-config
